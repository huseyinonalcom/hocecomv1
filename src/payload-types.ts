/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    companies: Company;
    establishments: Establishment;
    logos: Logo;
    products: Product;
    productImages: ProductImage;
    addresses: Address;
    shelves: Shelf;
    productCategories: ProductCategory;
    documents: Document;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'super_admin' | 'admin' | 'employee' | 'customer';
  firstName: string;
  lastName: string;
  phone?: string | null;
  isBlocked?: boolean | null;
  company: number | Company;
  establishment?: (number | Establishment)[] | null;
  customerCategory: 'professional' | 'private';
  customerCompany?: string | null;
  customerTaxNumber?: string | null;
  customerAddresses?: (number | Address)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: number;
  name: string;
  logo?: (number | null) | Logo;
  establishment?: (number | Establishment)[] | null;
  users?: (number | User)[] | null;
  active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "logos".
 */
export interface Logo {
  id: number;
  name?: string | null;
  company?: (number | null) | Company;
  establishment?: (number | null) | Establishment;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "establishments".
 */
export interface Establishment {
  id: number;
  name: string;
  logo?: (number | null) | Logo;
  company: number | Company;
  users?: (number | User)[] | null;
  addresses?: (number | Address)[] | null;
  documents?: (number | Document)[] | null;
  category: 'storefront' | 'warehouse';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  establishment?: (number | null) | Establishment;
  customer?: (number | null) | User;
  company: number | Company;
  street: string;
  door: string;
  floor?: string | null;
  zip: string;
  city?: string | null;
  province?: string | null;
  country: string;
  name?: string | null;
  isDefault?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "documents".
 */
export interface Document {
  id: number;
  establishment: number | Establishment;
  customer: number | User;
  company: number | Company;
  creator: number | User;
  isDeleted?: boolean | null;
  type: 'quote' | 'order' | 'delivery_note' | 'invoice' | 'credit_note';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  name: string;
  description?: string | null;
  value: number;
  category: (number | ProductCategory)[];
  company: number | Company;
  extraFields?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  productImages?: (number | ProductImage)[] | null;
  shelves?: (number | Shelf)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productCategories".
 */
export interface ProductCategory {
  id: number;
  name: string;
  description?: string | null;
  headCategory?: (number | null) | ProductCategory;
  subCategories?: (number | ProductCategory)[] | null;
  categoryImage?: (number | null) | ProductImage;
  products?: (number | Product)[] | null;
  company: number | Company;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productImages".
 */
export interface ProductImage {
  id: number;
  name?: string | null;
  product?: (number | null) | Product;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shelves".
 */
export interface Shelf {
  id: number;
  company: number | Company;
  establishment: number | Establishment;
  product: number | Product;
  stock?: number | null;
  region?: string | null;
  stack?: string | null;
  level?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'addresses';
        value: number | Address;
      }
    | {
        relationTo: 'documents';
        value: number | Document;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}